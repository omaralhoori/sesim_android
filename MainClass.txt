package com.madartech.sesim;

import android.Manifest;
import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.firestore.DocumentSnapshot;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.firestore.QueryDocumentSnapshot;
import com.google.firebase.firestore.QuerySnapshot;
import com.madartech.sesim.utils.ImagePicker;
import com.madartech.sesim.utils.Permissions;
import com.madartech.sesim.utils.VoiceRecorder;

import java.util.ArrayList;

public class HomeActivity extends AppCompatActivity implements View.OnClickListener, View.OnTouchListener{

    private TextView recordingSts;
    private Button pickImageBtn;
    private Button uploadBtn;
    private Button recordBtn;
    private Button playBtn;
    private Button logout;

    private ImageView imageView;
    private ProgressDialog progressDialog;

    String userName;
    FirebaseUser user ;
    FirebaseFirestore db;
    private VoiceRecorder recorder;
    private ImagePicker imagePicker;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_home);
        user = FirebaseAuth.getInstance().getCurrentUser();
        db = FirebaseFirestore.getInstance();
//        db.collection("users").document(user.getUid()).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
//            @Override
//            public void onComplete(@NonNull Task<DocumentSnapshot> task) {
//                if(task.isSuccessful()){
//                        name.setText((CharSequence)task.getResult().get("name"));
//
//                }
//            }
//        });
        progressDialog = new ProgressDialog(this);
        recorder = new VoiceRecorder(this,user.getUid(), progressDialog);
        imagePicker = new ImagePicker(this, user.getUid(), progressDialog);


        recordingSts = findViewById(R.id.recordingStatus);
        pickImageBtn = findViewById(R.id.selectPhotoBtn);
        recordBtn = findViewById(R.id.recordBtn);
        playBtn = findViewById(R.id.playBtn);
        imageView = findViewById(R.id.imageView);
        uploadBtn = findViewById(R.id.uploadBtn);

        uploadBtn.setOnClickListener(this);
        pickImageBtn.setOnClickListener(this);
        recordBtn.setOnTouchListener(this);
        playBtn.setOnClickListener(this);
        logout = findViewById(R.id.logout);
        logout.setOnClickListener(this);

    }



    @Override
    public void onClick(View view) {
        switch (view.getId()){
            case R.id.selectPhotoBtn:
                    selectImage();
                break;
            case R.id.playBtn:
                recorder.audioPlayer();
                break;
            case R.id.uploadBtn:
                uploadPost();
                break;
            case R.id.logout:
                FirebaseAuth.getInstance().signOut();
                finish();
                break;
        }
    }

    private void uploadPost() {
        progressDialog.setMessage("Uploading...");
        progressDialog.show();
        recorder.uploadAudio();
        imagePicker.uploadImage();
    }

    @Override
    public boolean onTouch(View view, MotionEvent motionEvent) {
        if(checkSelfPermission(Manifest.permission.RECORD_AUDIO)!= PackageManager.PERMISSION_GRANTED){
            Permissions.getAudioRecordPermission(this);
        }else {
            try {
                if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {
                    recorder.startRecording();
                    recordingSts.setText("Recording Start");
                } else if (motionEvent.getAction() == MotionEvent.ACTION_UP) {
                    recorder.stopRecording();
                    recordingSts.setText("Recording Stop");
                }
            }catch (Exception e){

            }
        }
        return false;
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if(requestCode == Permissions.IMAGE_READ_CODE){
            if(grantResults.length>0 && grantResults[0] == PackageManager.PERMISSION_GRANTED){
                imagePicker.pickImage();
            }
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if(resultCode == RESULT_OK){
            if(data == null){
                Toast.makeText(this,"Unable to choose image", Toast.LENGTH_SHORT).show();
                return;
            }
            imagePicker.setPickingResult(data, imageView);
            //Intent intent = new Intent(getApplicationContext(),PickImageActivity.class);
            //intent.putExtra("IMAGE_URI",uploadImgs);
            //intent.putExtra("TOKEN", TOKEN);
            //startActivity(intent);
        }
    }
    private void  selectImage(){
        if(checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE)!= PackageManager.PERMISSION_GRANTED){
            Permissions.getImageReadPermission(this);
        }else{
            imagePicker.pickImage();
        }
    }
}